<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[测试]]></title>
    <url>%2F2018%2F09%2F02%2F%E6%B5%8B%E8%AF%95%2F</url>
    <content type="text"><![CDATA[换电脑测试测试开始今天是个好日子]]></content>
      <categories>
        <category>测试</category>
      </categories>
      <tags>
        <tag>计算</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Git&GitHub从安装到使用]]></title>
    <url>%2F2018%2F08%2F09%2FGit%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8%2F</url>
    <content type="text"><![CDATA[# 一： 前言IT界一直流传这样一句话,身为一名合格的程序员，如果对Git不能熟练使用，那就妄称自己是程序员了，那我们就从GIt安装开始吧 一 小白安装Terry和你一起从新手出发,Git世界探索之路从现在开始目的：通过git管理GitHub托管项目代码下载：（git是一个软件，分32位，64位）安装：注意这两步，其他的都选next检验：鼠标在桌面右击，出现两个Git Gui here 和Git Bash here ,说明安装成功 二 Git最核心也是最基础的几个概念2.1 Git 工作区域：代码提交流程【3—–》2——–》1】 1 Git Repository（Git 仓库）： 最终确定的文件保存到仓库，成为一个新的版本，并且对他人可见 2 暂存区 ：暂存已经修改的文件，最后统一提交到git仓库中 3 Working Dictionary (工作区） : 添加，编辑，修改等动作 2.2 不同区的来回跑2.2.1工作区—–》暂存区git status （查看文件在哪个区）git add hello.java 2.2.2暂存区——》仓库git statusgit commit -m “提交描述” 仓库git status 三 Git在本地的操作3.1 基本信息设置用户名和邮箱是唯一的，当你fork一个项目，点进去查看时，会看到最近提交Pull Requests的人的信息，写错了就是别人了设置用户名git config –global user.name ‘TerryLovesSmiles’设置邮箱git config –global user.email &#39;1164402695@qq.com‘注意： 该设置在GitHub主页显示谁提交了该文件 3.2 初始化一个新的Git仓库创建文件夹 mkdir test在文件内初始化git(创建git仓库 cd test pwd git init (会生成.git隐藏文件（存储仓库的本地信息的），看不到的话，就设置下显示隐藏文件喽) 3.3 向仓库中添加文件（工作区—–》暂存区—》git 仓库 touch a1.java —–&gt;新建一个文件 git add a1.javagit commit -m “add a1.java” 3.4 修改文件(修改过后，再次重新add到暂存区,commit) vi test 编辑cat test 显示出来文件内的信息git statusgit add test 暂存区的a1.java是蓝色的git commit test -m “modify test” 3.5 删除文件rm -rf a1.javagit rm a1.javagit commit a1.java -m “rm a1.java” 4 Git远程仓库###4.1 作用：备份。 实现代码的共享。 工作区—add–》暂存区—commit—》Git仓库（本地）–push—–》Git远程仓库 git congig –list 查看配置信息 4.2 Git克隆目的 将远程仓库（github对应的项目）复制到本地代码 ： git clone 仓库地址…….git push (会报错 即让你输入用户名和密码) 办法将 [remote “origin”] url = https://github.com/用户名/仓库名.git改为 [remote “origin”] url = https://用户名:密码@github.com/用户名/仓库名.git]]></content>
      <categories>
        <category>Git&amp;GitHub</category>
      </categories>
      <tags>
        <tag>Git小白篇</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo个性优化大全]]></title>
    <url>%2F2018%2F08%2F09%2FHexo%E4%B8%AA%E6%80%A7%E4%BC%98%E5%8C%96%E5%A4%A7%E5%85%A8%2F</url>
    <content type="text"><![CDATA[一 前言万丈高楼平地起，昨天我们把Hexo博客搭成了自己的小窝，那么今天！！！ Terry告诉你：史上最全的next主题优化教程来了！ 来吧！和Terry一起把Hexo从小木屋搭成小洋楼！！！ 第一步，基本功能的完善来Next的使用中文官网，照着做，一步一步来，没有比这更详细的基础搭配了 [Next使用文档]http://theme-next.iissnan.com/: 第二步，个性化优化这位老哥的Hexo优化博客，被网上疯狂转载，我的博客优化70%基本都来源于这篇博客 超详细进阶优化 第三步 ，超全的进阶优化你再也不用费心思到处找了，都在这啦！！！ 看到文章左边的分享按钮了吗？他来源于这 看到文章下边的评论系统了吗？你可以参考这 看到Hexo左下角的音乐播放了吗？来。兄dei看这 主页文章，能我点阅读全文再展开吗？嘿嘿，可以呀 背景图片看起来，哎呀，不错吆！来这 Hexo-admin后台管理，任何地方都可以更新博客了来吧 第四步 兄dei们，你们看着办吧Terry利用闲暇基本所有时间整理了三天，现在全在这了，空荡荡的看完就走，你的良心不会痛吗。。。（微笑脸）]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo优化</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo+GitPages--从0搭建，再也不羡慕别人了！]]></title>
    <url>%2F2018%2F08%2F08%2FHexo-GitPages-%E4%BB%8E0%E6%90%AD%E5%BB%BA%E5%88%B0%E5%9F%BA%E6%9C%AC%E9%85%8D%E7%BD%AE%2F</url>
    <content type="text"><![CDATA[一 前言：为什么会想到要自己搭博客呢？ 一方面一直对传说中的自己搭一个博客充满了敬佩和好奇，另一方面对别人自己好看的博客真的是羡慕呀！再加上实在无法忍受csdn等老牌博客网站无处不在的广告突袭。。。受不了，那就搭喽！ 搭建心得 搭的时候，心态初期感觉难如登天，因为教程太多了，有些常识大佬不提，可对自己来说，那个真的不是常识呀！QAQ 。。。老是报各种错误。。 心态中后期，发现报的错都是普遍的常见错。。。网上解决方法太多了，真是爱死度娘了 好了，话不多说，正式开始 二 用Hexo在本地搭建一个博客安装Hexo 1.下载安装nodejs http://nodejs.cn/ 傻瓜式安装 2. 下载安装git https://git-scm.com/downloads 傻瓜式安装 3. 在gitBash命令行使用npm安装Hexo npm install -g hexo-cli //在gitBash命令里 快速开始 1.在桌面新建个文件夹blog，在GitBash里进入这个文件夹,输入 注意：blog是自己建的空白项目文件名 hexo i blog //init的缩写 cd blog //切换到站点根目录 hexo g //generetor的缩写 hexo s //server的缩写 2. 打开浏览器输入localhost:4000查看： 这个是Hexo的默认博客主题。看到这个说明在本地已经搭建成功了 选择主题-Next 在站点根目录输入 1git clone https://github.com/iissnan/hexo-theme-next themes/next 完成后，打开站点配置文件， 找到theme 字段，把landscape更改为next 在终端输入12345hexo clean //清除缓存hexo g //重新生成代码hexo s //部署到本地//然后打开浏览器访问 localhost:4000 查看效果 nexT主题有三种选择，这个只是最简洁的一种，我们选择最好看的那个。 Muse -默认Scheme，这是NexT最初的版本，黑白主调，大量留白Mist - Muse的紧凑版本，整洁有序的单栏外观Pisces -双栏Scheme，小家碧玉似的清新 配置nexT ctrl+f 搜素scheme , 选择pisces然后重新clean，generator，查看效果: 三 将本地博客上传到GitHub因为我们想要的是通过网址访问，所以接下来还要搭到GitHub上 具体的可以看这个博客 四 注意！！！在修改Hexo的站点文件时 冒号的后面一定一定一定要有一个空格！！（大坑） 五 发布你的第一篇博客根目录下输入： 123456789hexo new "postName" //hexo n 也可以 //你自己的博客名称，名为postName.md的文件会建在目 //录/blog/source/_posts下。文章编辑完成后，终端在根目录文件夹下，执行如下命令来发布:hexo g //生成静态页面hexo d //发布 六 后记这个只是最简单的博客的搭建，相当于盖房子。盖了一个小木屋，成长为参天大树还需要进一步个性化配置]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo搭建</tag>
      </tags>
  </entry>
</search>
